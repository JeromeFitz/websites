name: '‚ñ∂Ô∏è Pull'
on:
  pull_request:
    branches:
      - main
      # prerelease
      - canary
      - develop
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft
concurrency:
  group: pull-${{ github.ref }}-1
  cancel-in-progress: true
jobs:
  release:
    name: 'üë∑Ô∏è  Pull'
    if: github.event.pull_request.draft == false
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      # GH_TOKEN: ${{ secrets.GH_TOKEN }}
      # GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node: ['16']

    steps:
      - name: 'üêôÔ∏è  Checkout'
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: 1

      - name: 'üíΩÔ∏è  Node (${{ matrix.node }})'
        id: node-setup
        uses: actions/setup-node@v2
        with:
          # architecture: 'x64'
          cache-dependency-path: yarn.lock
          cache: 'yarn'
          node-version: ${{ matrix.node }}

      # - name: 'üß∂Ô∏è  Cache (yarn)'
      #   id: cache-yarn
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       **/node_modules
      #     key: modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       modules-${{ runner.os }}-

      - name: 'üì¶Ô∏è  Dependecies'
        id: dependecies
        run: |
          yarn install --frozen-lockfile --ignore-engines --network-concurrency 1

      - name: 'üî∫Ô∏è  Cache (turbo)'
        id: cache-turbo
        uses: actions/cache@v2
        with:
          path: .cache-turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          # order of preference => turbo will re-check
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-
            turbo-${{ github.job }}-
            turbo-

      - name: 'üö®Ô∏è  Lint'
        id: lint
        run: |
          yarn lint --cache-dir=".cache-turbo"

      - name: 'üß™Ô∏è  Test'
        id: test
        # @note(ci) comment out right now as this requires `build`
        run: |
          echo # yarn test --cache-dir=".cache-turbo"

      - name: 'üî∫Ô∏è Deploy'
        id: deploy
        uses: BetaHuhn/deploy-to-vercel-action@v1
        # if: contains(github.event.head_commit.message , '[build]') || contains(github.event.head_commit.message , '[b]') || github.ref == 'refs/heads/main'
        with:
          # GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          PRODUCTION: false
          PR_LABELS: false
          CREATE_COMMENT: true
          DELETE_EXISTING_COMMENT: true
      # - name: 'üìùÔ∏è Comment'
      #   id: comment
      #   uses: phulsechinmay/rewritable-pr-comment@v0.3.0
      #   if: ${{ steps.deploy.outputs.DEPLOYMENT_CREATED }}
      #   with:
      #     message: |
      #       üî∫Ô∏è This pull request has been deployed to Vercel:

      #       <table>
      #         <tr>
      #           <td><strong>‚úÖ Preview:</strong></td>
      #           <td><a href='${{ steps.deploy.outputs.PREVIEW_URL }}'>${{ steps.deploy.outputs.PREVIEW_URL }}</a></td>
      #         </tr>
      #         <tr>
      #           <td><strong>üîç Inspect:</strong></td>
      #           <td><a href='${ steps.deploy.outputs.DEPLOYMENT_INSPECTOR_URL }'>${ steps.deploy.outputs.DEPLOYMENT_INSPECTOR_URL }</a></td>
      #         </tr>
      #       </table>

      #       üìùÔ∏è [View Workflow Logs](${ LOG_URL })
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     COMMENT_IDENTIFIER: 'deploy'
