name: '‚ñ∂Ô∏è PR'
on:
  # push:
  #   branches:
  #     - main
  #     # prerelease branches
  #     - canary
  #     - develop
  #     - ci/**
  #     - feature/**
  #     - refactor/**
  #     - release/**
  pull_request:
    branches:
      - main
      # prerelease
      - canary
      - develop
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft
concurrency:
  group: gh-${{ github.ref }}-1
  cancel-in-progress: true
jobs:
  ci:
    name: 'üë∑Ô∏è  CI'
    if: github.event.pull_request.draft == false
    # if: contains(github.event.head_commit.message , '[build]') || contains(github.event.head_commit.message , '[b]') || github.ref == 'refs/heads/main'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node: ['16']

    steps:
      - name: 'üêôÔ∏è  Checkout'
        id: checkout
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: 10

      - name: 'üíΩÔ∏è  Node (${{ matrix.node }})'
        id: node-setup
        uses: actions/setup-node@v2
        with:
          # architecture: 'x64'
          cache-dependency-path: yarn.lock
          cache: 'yarn'
          node-version: ${{ matrix.node }}

      - name: 'üì¶Ô∏è  Dependencies'
        id: dependecies
        run: |
          yarn install --frozen-lockfile --ignore-engines --network-concurrency 1

      - name: 'üî∫Ô∏è  Cache (turbo)'
        id: cache-turbo
        uses: actions/cache@v2
        with:
          path: .cache-turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          # order of preference => turbo will re-check
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-
            turbo-${{ github.job }}-
            turbo-

      - name: 'üö®Ô∏è  Lint'
        id: lint
        run: |
          yarn lint --cache-dir=".cache-turbo"

      - name: 'üß™Ô∏è  Test'
        id: test
        # @note(ci) comment out right now as this requires `build`
        run: |
          echo # yarn test --cache-dir=".cache-turbo"

      - name: 'üè∑Ô∏è  Release'
        id: release
        if: contains(github.event.head_commit.message , '[build]') || contains(github.event.head_commit.message , '[b]')
        run: |
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          echo "@jeromefitz:registry=https://registry.npmjs.org/" >> .npmrc
          yarn semantic-release --cache-dir=".cache-turbo"

  deploy:
    name: 'üöÄÔ∏è Deploy'
    needs: ['ci']
    if: github.event.pull_request.draft == false
    # if: github.ref == 'refs/heads/main'
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    strategy:
      matrix:
        node: ['16']

    steps:
      - name: 'üêôÔ∏è  Checkout'
        id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: 'üî∫Ô∏è  Deploy (vercel)'
        id: deploy
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          PRODUCTION: true
          PR_LABELS: false
          CREATE_COMMENT: true
          DELETE_EXISTING_COMMENT: true
