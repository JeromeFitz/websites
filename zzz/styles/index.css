/*! purgecss start ignore */
@tailwind base;
@import 'tailwind/base.css';

@tailwind components;
@import 'tailwind/components.css';
/*! purgecss end ignore */

@tailwind utilities;

/**
* Load these after initial Tailwind Configuration
**/

@import '_global.css'; /* @note naming convention for alpha-sort */
@import 'alerts.css';
@import 'animations.css';
@import 'badge.css';
@import 'navigation.css';
@import 'notion.css';
/* @import 'prose.css'; */
@import 'reach/skip-nav.css';
@import 'reach/tooltip.css';
@import 'selection.css';
@import 'shadows.css';
@import 'typography.css';
@import '~components/NProgress/NProgress.module.css';

/**
* @note layer/base seems to only work as last and in root :X
**/
@layer base {
  .events #relations--container #relations--container--shows {
    display: none !important;
  }

  .spacer {
    @apply w-full h-0.5 md:h-px;
  }

  .spacer--h {
    @apply w-full h-0.5 md:h-px bg-black dark:bg-white;
  }

  p em,
  p s,
  p strong,
  p u,
  p {
    /* @apply text-gray-900 dark:text-gray-100 text-xl; */
    @apply my-2 mt-2;
    /* @apply flex items-center; */
    /* @apply text-base md:text-lg; */
    @apply prose md:prose-lg max-w-none;
    @apply text-black dark:text-white;
    @apply leading-normal;
  }

  li {
    @apply my-1.5;
  }

  @media (prefers-reduced-motion: no-preference) {
    .breadcrumb-transition,
    a,
    li,
    p {
      transition: color 0.25s cubic-bezier(0.175, 0.75, 0.5, 1);
    }

    h1,
    h2,
    h3,
    h4 {
      @apply transition-all;
    }
  }

  p > a,
  p > code,
  p > em,
  p > s,
  p > strong,
  p > u {
    color: 'inherit';
    /* @apply mx-0.5; */
  }

  p > a {
    @apply text-black dark:text-white;
  }

  h1,
  h2,
  h3,
  h4 {
    @apply text-black dark:text-white;
    @apply overflow-x-hidden;
  }

  h1,
  .gradient {
    @apply bg-clip-text;
    @apply bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500;
    @apply dark:bg-gradient-to-l;
  }

  /* h2,
  h3,
  h4 {
    @apply bg-gradient-to-l dark:bg-gradient-to-r;
  } */

  h1 {
    /* @apply font-bold tracking-tight mb-6 md:mb-8; */
    /* @apply prose prose-3xl max-w-none; */
    @apply my-6 md:my-8;
    @apply text-6xl tracking-tight leading-normal font-extrabold;
  }

  h2 {
    @apply font-bold tracking-tight my-3 md:my-4;
    @apply prose prose-2xl max-w-none;
  }

  h3 {
    @apply font-bold tracking-tight my-2 md:my-3;
    @apply prose prose-xl max-w-none;
  }

  h4 {
    @apply font-bold tracking-tight my-2 md:my-3;
    @apply prose prose-lg max-w-none;
  }
  ol,
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    height: 100%;
    @apply text-sm visible;
  }

  .form-tick:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M5.707 7.293a1 1 0 0 0-1.414 1.414l2 2a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0-1.414-1.414L7 8.586 5.707 7.293z'/%3e%3c/svg%3e");
    border-color: transparent;
    background-color: currentColor;
    background-size: 100% 100%;
    background-position: 50%;
    background-repeat: no-repeat;
  }

  .item {
    display: flex;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    margin: 5px;
    position: relative;
    cursor: pointer;
    flex-shrink: 0;
    @apply text-sm visible;
  }

  .outline {
    position: absolute;
    top: -6px;
    left: -6px;
    right: -6px;
    bottom: -6px;
    border: 2px solid white;
    border-radius: 0%;
  }

  ._text-black {
    @apply text-black dark:text-black;
  }
  ._bg-black {
    @apply bg-black dark:bg-black;
  }
  ._text-white {
    @apply text-white dark:text-white;
  }
  ._bg-white {
    @apply bg-white dark:bg-white;
  }

  ._transform {
    @apply transform;
  }
  ._rotate-180 {
    @apply rotate-180;
  }
}

@layer utilities {
  @variants responsive {
    .hide {
      display: none;
      visibility: hidden;
    }

    .show {
      display: inline;
      visibility: visible;
    }
  }
}
