{"version":3,"file":"plugin.umd.js","sources":["../../../node_modules/crypto-random-string/index.js","../../../node_modules/unique-string/index.js","../../../node_modules/subsume/node_modules/escape-string-regexp/index.js","../../../node_modules/subsume/index.js","../../../node_modules/make-synchronous/index.js","../src/config.ts","../src/plugin.ts"],"sourcesContent":["'use strict';\nconst crypto = require('crypto');\n\nmodule.exports = length => {\n\tif (!Number.isFinite(length)) {\n\t\tthrow new TypeError('Expected a finite number');\n\t}\n\n\treturn crypto.randomBytes(Math.ceil(length / 2)).toString('hex').slice(0, length);\n};\n","'use strict';\nconst cryptoRandomString = require('crypto-random-string');\n\nmodule.exports = () => cryptoRandomString(32);\n","'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n","'use strict';\nconst uniqueString = require('unique-string');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nclass Subsume {\n\tstatic parse(text, id) {\n\t\treturn (new Subsume(id)).parse(text);\n\t}\n\n\tstatic parseAll(text, ids) {\n\t\tif (ids && !Array.isArray(ids)) {\n\t\t\tthrow new TypeError('IDs is supposed to be an array');\n\t\t}\n\n\t\tconst result = {data: new Map(), rest: text};\n\t\tconst idList = ids ? ids : Subsume._extractIDs(text);\n\n\t\tif (!ids) {\n\t\t\ttry {\n\t\t\t\tSubsume._checkIntegrity(text);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`Could not parse because the string's integrity is compromised: ${error.message}`);\n\t\t\t}\n\t\t}\n\n\t\tfor (const id of idList) {\n\t\t\tif (result.data.get(id)) {\n\t\t\t\tthrow new Error('IDs aren\\'t supposed to be repeated at the same level in a string');\n\t\t\t}\n\n\t\t\tconst res = Subsume.parse(result.rest, id);\n\t\t\tresult.data.set(id, res.data);\n\t\t\tresult.rest = res.rest;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic _extractIDs(text) {\n\t\ttry {\n\t\t\tSubsume._checkIntegrity(text);\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Could not extract IDs because the string's integrity is compromised: ${error.message}`);\n\t\t}\n\n\t\tconst idRegex = /@@\\[(.{32})\\]@@.*##\\[\\1\\]##/g;\n\t\tconst idList = [];\n\t\tlet match;\n\n\t\tdo {\n\t\t\tmatch = idRegex.exec(text);\n\t\t\tif (match) {\n\t\t\t\tconst [, id] = match;\n\t\t\t\tidList.push(id);\n\t\t\t}\n\t\t} while (match);\n\n\t\treturn idList;\n\t}\n\n\tstatic _checkIntegrity(text) {\n\t\tconst delimiterRegex = /([#|@])\\1\\[(.{32})\\]\\1{2}/g;\n\t\tconst ids = new Map();\n\t\tconst idStack = [];\n\t\tlet match;\n\n\t\tdo {\n\t\t\tmatch = delimiterRegex.exec(text);\n\n\t\t\tif (match) {\n\t\t\t\tconst [, embedToken, id] = match;\n\n\t\t\t\tif (embedToken === '@') {\n\t\t\t\t\tlet map = ids;\n\t\t\t\t\tfor (const el of idStack) {\n\t\t\t\t\t\tmap = map.get(el);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (map.get(id)) {\n\t\t\t\t\t\tthrow new Error('There are duplicate IDs in the same scope.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmap.set(id, new Map());\n\n\t\t\t\t\tidStack.push(id);\n\t\t\t\t} else {\n\t\t\t\t\tidStack.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t} while (match);\n\n\t\tif (idStack.length !== 0) {\n\t\t\tthrow new Error('There is a mismatch between prefixes and suffixes');\n\t\t}\n\n\t\treturn ids;\n\t}\n\n\tconstructor(id) {\n\t\tif (id && (id.includes('@@[') || id.includes('##['))) {\n\t\t\tthrow new Error('`@@[` and `##[` cannot be used in the ID');\n\t\t}\n\n\t\tthis.id = id ? id : uniqueString();\n\t\tthis.prefix = `@@[${this.id}]@@`;\n\t\tthis.postfix = `##[${this.id}]##`;\n\t\tthis.regex = new RegExp(escapeStringRegexp(this.prefix) + '([\\\\S\\\\s]*)' + escapeStringRegexp(this.postfix), 'g');\n\t}\n\n\tcompose(text) {\n\t\treturn this.prefix + text + this.postfix;\n\t}\n\n\tparse(text) {\n\t\ttry {\n\t\t\tSubsume._checkIntegrity(text);\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Could not extract IDs because the string's integrity is compromised: ${error.message}`);\n\t\t}\n\n\t\tconst ret = {};\n\n\t\tret.rest = text.replace(this.regex, (m, p1) => {\n\t\t\tif (p1) {\n\t\t\t\tret.data = p1;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn ret;\n\t}\n}\n\nmodule.exports = Subsume;\n","'use strict';\nconst childProcess = require('child_process');\nconst v8 = require('v8');\nconst Subsume = require('subsume');\n\nconst HUNDRED_MEGABYTES = 1000 * 1000 * 100;\n\nmodule.exports = function_ => {\n\treturn (...arguments_) => {\n\t\tconst serializedArguments = v8.serialize(arguments_).toString('hex');\n\t\tconst subsume = new Subsume();\n\n\t\tconst input = `\n\t\t\tconst v8 = require('v8');\n\t\t\tconst Subsume = require('subsume');\n\n\t\t\tconst subsume = new Subsume('${subsume.id}');\n\n\t\t\tconst send = value => {\n\t\t\t\tconst serialized = v8.serialize(value).toString('hex');\n\t\t\t\tprocess.stdout.write(subsume.compose(serialized));\n\t\t\t};\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst arguments_ = v8.deserialize(Buffer.from('${serializedArguments}', 'hex'));\n\t\t\t\t\tconst result = await (${function_})(...arguments_);\n\t\t\t\t\tsend({result});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsend({error});\n\t\t\t\t}\n\t\t\t})();\n\t\t`;\n\n\t\tconst {error: subprocessError, stdout, stderr} = childProcess.spawnSync(process.execPath, ['-'], {\n\t\t\tinput,\n\t\t\tencoding: 'utf8',\n\t\t\tmaxBuffer: HUNDRED_MEGABYTES,\n\t\t\tenv: {\n\t\t\t\t...process.env,\n\t\t\t\tELECTRON_RUN_AS_NODE: '1'\n\t\t\t}\n\t\t});\n\n\t\tif (subprocessError) {\n\t\t\tthrow subprocessError;\n\t\t}\n\n\t\tconst {data, rest} = subsume.parse(stdout);\n\n\t\tprocess.stdout.write(rest);\n\t\tprocess.stderr.write(stderr);\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {error, result} = v8.deserialize(Buffer.from(data, 'hex'));\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn result;\n\t};\n};\n","export const classNamePrefix = \"plaiceholder\";\n","import plugin from \"tailwindcss/plugin\";\nimport makeSynchronous from \"make-synchronous\";\nimport type { IGetPlaiceholder } from \"plaiceholder\";\nimport { classNamePrefix } from \"./config\";\n\nconst getPlaiceholder = makeSynchronous(async (imageUrl) => {\n  const { getPlaiceholder } = require(\"plaiceholder\");\n\n  const { css } = await (getPlaiceholder as IGetPlaiceholder)(imageUrl);\n\n  return css;\n});\n\nexport default plugin(async (props) => {\n  if (typeof props === 'undefined') {\n    // console.warn(\"warn - `@plaiceholder/tailwindcss` no props passed\");\n    return\n  } else {\n    console.warn(\n      \"warn - `@plaiceholder/tailwindcss` uses Tailwind's JIT engine and is not covered by semver.\"\n    );\n    const { config, matchUtilities } = props\n\n    const configMode = await config(\"mode\")\n\n    if (typeof configMode === 'undefined') {\n      // console.warn(\"warn - `@plaiceholder/tailwindcss` no config passed.\");\n      return\n    } else {\n      if (configMode !== \"jit\") {\n        console.warn(\"warn - `@plaiceholder/tailwindcss` only supports JIT mode.\");\n        // console.warn(configMode)\n      }\n    }\n\n    if (typeof matchUtilities === 'undefined') {\n      // console.warn(\"warn - `@plaiceholder/tailwindcss` no matchUtilities passed.\");\n      return\n    } else {\n      matchUtilities({\n        [classNamePrefix]: (url) => getPlaiceholder(url),\n      });\n    }\n\n    // console.warn(\"warn - `@plaiceholder/tailwindcss` complete\");\n\n  }\n\n});\n"],"names":["length","Number","isFinite","TypeError","crypto","randomBytes","Math","ceil","toString","slice","cryptoRandomString","matchOperatorsRegex","string","replace","Subsume","parse","text","id","parseAll","ids","Array","isArray","result","data","Map","rest","idList","_extractIDs","_checkIntegrity","error","Error","message","get","res","set","idRegex","match","exec","push","delimiterRegex","idStack","embedToken","map","el","pop","constructor","includes","uniqueString","prefix","postfix","regex","RegExp","escapeStringRegexp","compose","ret","m","p1","HUNDRED_MEGABYTES","function_","arguments_","serializedArguments","v8","serialize","subsume","input","subprocessError","stdout","stderr","childProcess","spawnSync","process","execPath","encoding","maxBuffer","env","ELECTRON_RUN_AS_NODE","write","deserialize","Buffer","from","classNamePrefix","getPlaiceholder","makeSynchronous","imageUrl","require","css","plugin","props","console","warn","config","matchUtilities","configMode","url"],"mappings":"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"}